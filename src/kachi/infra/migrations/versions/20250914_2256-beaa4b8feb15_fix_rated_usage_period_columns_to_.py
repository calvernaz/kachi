"""Fix rated_usage period columns to datetime

Revision ID: beaa4b8feb15
Revises: b954aefc4a7d
Create Date: 2025-09-14 22:56:39.480012

"""
from collections.abc import Sequence

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "beaa4b8feb15"
down_revision: str | Sequence[str] | None = "b954aefc4a7d"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Since the table is empty, we can safely alter the column types
    # First, drop the existing indexes that depend on these columns
    op.drop_index("idx_rated_usage_customer_period", table_name="rated_usage")
    op.drop_constraint(
        "rated_usage_customer_id_period_start_period_end_key",
        "rated_usage",
        type_="unique",
    )

    # Alter the column types with explicit casting
    op.execute(
        "ALTER TABLE rated_usage ALTER COLUMN period_start TYPE TIMESTAMP WITH TIME ZONE USING CASE WHEN period_start = '' THEN NULL ELSE period_start::timestamp with time zone END"
    )
    op.execute(
        "ALTER TABLE rated_usage ALTER COLUMN period_end TYPE TIMESTAMP WITH TIME ZONE USING CASE WHEN period_end = '' THEN NULL ELSE period_end::timestamp with time zone END"
    )

    # Recreate the indexes
    op.create_index(
        "idx_rated_usage_customer_period",
        "rated_usage",
        ["customer_id", "period_start"],
    )
    op.create_unique_constraint(
        "rated_usage_customer_id_period_start_period_end_key",
        "rated_usage",
        ["customer_id", "period_start", "period_end"],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop indexes first
    op.drop_index("idx_rated_usage_customer_period", table_name="rated_usage")
    op.drop_constraint(
        "rated_usage_customer_id_period_start_period_end_key",
        "rated_usage",
        type_="unique",
    )

    # Convert back to text
    op.execute(
        "ALTER TABLE rated_usage ALTER COLUMN period_start TYPE TEXT USING period_start::text"
    )
    op.execute(
        "ALTER TABLE rated_usage ALTER COLUMN period_end TYPE TEXT USING period_end::text"
    )

    # Recreate indexes
    op.create_index(
        "idx_rated_usage_customer_period",
        "rated_usage",
        ["customer_id", "period_start"],
    )
    op.create_unique_constraint(
        "rated_usage_customer_id_period_start_period_end_key",
        "rated_usage",
        ["customer_id", "period_start", "period_end"],
    )
    # ### end Alembic commands ###
